<?php

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\FieldDefinitionInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\Core\Field\FieldItemListInterface;
use Drupal\Core\Access\AccessResult;

/**
 * Implements hook_entity_bundle_field_info().
 */
function workbench_reviewer_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  // Only add the reviewer field for bundles that are under moderation.
  if ($entity_type->id() == 'node' && array_key_exists('moderation_state', $base_field_definitions)) {
    $definitions['workbench_reviewer'] = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Request review'))
      ->setDescription(t('Optional: Enter the name of the user who should review this change.'))
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayOptions('view', array(
        'label' => 'hidden',
        'type' => 'hidden',
      ))
      ->setDisplayConfigurable('form', FALSE)
      ->setDisplayOptions('form', array(
        'type' => 'entity_reference_autocomplete',
        'weight' => 100,
        'settings' => array(
          'size' => 60,
          'match_operator' => 'CONTAINS',
          'placeholder' => ''
        ),
      ))
      ->setSetting('target_type', 'user');
    return $definitions;
  }
}

/**
 * Implements hook_entity_field_storage_info().
 */
function workbench_reviewer_entity_field_storage_info(EntityTypeInterface $entity_type) {
  // Adds the field for Workbench Reviewer to entity that are nodes.
  if ($entity_type->id() == 'node') {
    $definitions['workbench_reviewer'] = BaseFieldDefinition::create('entity_reference')
      ->setName('workbench_reviewer')
      ->setLabel(t('Request review'))
      ->setTargetEntityTypeId($entity_type->id())
      ->setSetting('target_type', 'user');
    return $definitions;
  }
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 */
function workbench_reviewer_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Move the Workbench Reviewer field to the 'meta' tab group.
  $form['workbench_reviewer']['#group'] = 'meta';
}

/**
 * Implements hook_preprocess_page().
 */
function workbench_reviewer_preprocess_page(&$variables) {
  // For admin pages, add in our library CSS and other assets.
  if ($variables['is_admin']) {
    $variables['#attached']['library'][] = 'workbench_reviewer/workbench_reviewer';
  }
}

function workbench_reviewer_entity_field_access($operation, FieldDefinitionInterface $field_definition, AccountInterface $account, FieldItemListInterface $items = NULL) {
  if ($field_definition->getName() == 'workbench_reviewer' && $operation == 'edit') {
    // Check if we have permission to assign a reviewer.
    return AccessResult::forbiddenIf(!AccessResult::allowedIfHasPermission($account, 'assign workbench reviewer')->isAllowed());
  }
  return AccessResult::neutral();
}
